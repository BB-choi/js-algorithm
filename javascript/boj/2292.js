let input = Number(require("fs").readFileSync("/dev/stdin").toString().trim());
// 1 7 19 37 61 91 .... 로 n번째 줄의 최대값이 늘어남
// 1은 방을 1개 지남
// 2~7은 방을 2개 지남
// 8~19는 방을 3개 지남

// 1에서 7은 +6, 7에서 19는 +18, 19에서 37은 +18
// 즉 6 * i 와 같은 식으로 늘어난다 (i는 1부터 시작)
// 앞의 값을 포함하여 + (6 * i)해 주어야 하므로 sum += i * 6
// arr에 미리 1,000,000,000까지의 값을 포함하도록 넣어놓고,
// arr에서 input이 몇 번째 인덱스(i)에 있는지만 찾아주면 된다.

let arr = [];
arr[0] = 0;
let sum = 1;

// sum<=1000000000 으로 하면 input(N)의 최대값인 1,000,000,000이 포함되지 않는다.
//18257(인덱스): 999899377(sum) 까지만 array에 저장됨
// 18256: 999789841
// 18257: 999899377
// 18258: 1000008919
// 18259: 1000118467
// 18260: 1000228021
// 와 같이 저장되므로 (테스트하여 확인해보기) sum <= 1000010000 까지 반복문을 돌린다.
for (let i = 1; sum <= 1000010000; i++) {
    arr[i] = sum;
    sum += i * 6;
}

const len = arr.length;
let answer = 0;
for (let i = 1; i < len; i++) {
    if (input <= arr[i]) {
        answer = i;
        break;
    }
}

console.log(answer);
